/*=======================*/
mzroot,
mzmodals {
  position: fixed;
  display: block;
  --wh: 100%;
  --ht: 100%;
  overflow: auto;
}
mzroot *,
mzmodals * {
  position: static;
  display: block;
  overflow: visible;
}
/*=======================*/
mzmodals {
  pointer-events: none;
  --bcr: transparent;
}
mzmodals.show {
  pointer-events: auto;
}
mzmodals * {
  pointer-events: auto;
}

/*=======================*/
mzwidget {
  display: contents;
}

/*=======================*/
mzscaffold {
  position: relative;
  --wh: 100%;
  --ht: 100%;
}

/*=======================*/
mzcontainer {
  --wh: max-content;
  --ht: max-content;
}

/*=======================*/
mzscroll {
  max-width: 100%;
  max-height: 100%;
}
mzscroll.x {
  overflow-x: auto;
}
mzscroll.y {
  overflow-y: auto;
}

/*=======================*/
mzcenter {
  --wh: 100%;
  --ht: 100%;
  flex: 1 0 max-content;
  display: flex;
  flex-wrap: nowrap;
  justify-content: center;
  align-items: center;
}
/*=======================*/
mzdivider {
  --wh: auto;
  --ht: auto;
  flex: 1 0 auto;
  justify-self: stretch;
  align-self: stretch;
  border-top: none !important;
  border-left: none !important;
}

/*=======================*/
mzflex,
mzstack {
  --wh: 100%;
  --ht: 100%;
  flex: 1 0 max-content;
  display: flex;
  flex-wrap: nowrap;
  justify-content: flex-start;
  align-items: flex-start;
  row-gap: 0.25rem;
  column-gap: 0.25rem;
}

mzflex.wrap {
  flex-wrap: wrap;
}
mzflex.shrink {
  width: auto;
  height: auto;
}

mzstack {
  position: relative;
}
mzstack > * {
  position: absolute;
}
/*=======================*/
mzgrid {
  --wh: 100%;
  --ht: 100%;

  flex: 1 0 max-content;
  display: grid;
  justify-content: flex-start;
  align-items: flex-start;
  row-gap: 0.25rem;
  column-gap: 0.25rem;
}

/*=======================*/
mzflex .mzFlexExpand {
  justify-self: stretch;
  align-self: stretch;
}

/*=======================*/
mzbutton {
  display: flex;
  flex-wrap: nowrap;
  justify-content: center;
  align-items: center;
  cursor: pointer;
  user-select: none;
}
mzbutton:hover {
  color: var(--h-cr) !important;
  background-color: var(--h-bcr) !important;
  border-color: var(--h-bcr) !important;
  border-style: var(--h-bse) !important;
  border-width: var(--h-bwh) !important;
}
mzbutton * {
  pointer-events: none;
}

/*=======================*/
mztext {
  word-wrap: normal;
  word-break: normal;
}

/*=======================*/
mzicon {
  font-family: "fontAwesomeBrands", "fontAwesomeRegular", "fontAwesomeSolid";
}

/*=======================*/
mzimage {
  display: contents;
}
mzimage img {
  pointer-events: none;
  user-select: none;
  max-width: 100%;
  max-height: 100%;
}

/*=======================*/
mzfield {
  --bdcr: white;
  --bd: var(--bdcr);
  --cr: #333;
  --hrcr: black;
  --fscr: blue;
  --ercr: red;
  --ftse: 1rem;
  --pg: 0.2rem 0.4rem;
  --brwh: 0.125rem;
  --brse: solid;
  --brrs: 0.15rem;
  --itsw: inset 0 0.1rem 0.16rem var(--cr);

  position: relative;
  display: grid;
  grid-template-rows: auto auto;
  grid-template-columns: auto;

  align-content: flex-start;
  justify-content: flex-start;
  align-items: flex-start;
  justify-items: flex-start;

  color: var(--cr);
}
mzfield.focus,
mzfield.label,
mzfield.value {
  margin-top: calc(var(--ftse) / 1.5);
}
mzfield.labelless {
  margin-top: unset;
}

/*=============*/
mzfield mzlabel {
  grid-row: 1/1;
  grid-column: 1/1;
  position: absolute;
  pointer-events: none;
  padding: var(--pg);
  margin: 0;
  border-width: var(--brwh);
  border-style: var(--brse);
  border-color: transparent;
  top: 0;
}
mzfield.focus mzlabel,
mzfield.label mzlabel,
mzfield.value mzlabel {
  top: -30%;
  background-color: var(--bdcr);
  border-width: 0;
  padding-top: 0;
  padding-bottom: 0;
  margin: var(--pg);
  font-size: calc(var(--ftse) / 1.2);
}
mzfield.labelless mzlabel {
  display: none;
}

/*=============*/
mzfield mzhint {
  grid-row: 1/1;
  grid-column: 1/1;
  position: absolute;
  pointer-events: none;
  padding: var(--pg);
  margin: 0;
  border-width: var(--brwh);
  border-style: var(--brse);
  border-color: transparent;
  top: 0;
  opacity: 0;
}
mzfield.focus mzhint,
mzfield.label mzhint,
mzfield.labelless mzhint {
  padding-top: calc(var(--ftse) / 2);
  opacity: 0.5;
}
mzfield.labelless mzhint {
  padding: var(--pg);
}
mzfield.value mzhint {
  opacity: 0;
}

/*=============*/
mzfield mzvalue {
  grid-row: 1/1;
  grid-column: 1/1;
  display: flex;
  flex-flow: column;
  justify-content: stretch;
  align-items: stretch;

  padding: var(--pg);
  border-width: var(--brwh);
  border-style: var(--brse);
  border-color: var(--cr);
  border-radius: var(--brrs);
  box-shadow: var(--itsw);
  cursor: pointer;
}
mzfield.focus mzvalue,
mzfield.label mzvalue,
mzfield.value mzvalue {
  padding-top: calc(var(--ftse) / 1.5);
}
mzfield.labelless mzvalue {
  padding: var(--pg);
}
mzfield.focus mzvalue {
  border-color: var(--fscr);
}
mzfield.error mzvalue {
  border-color: var(--ercr);
}

/*=============*/
mzfield mzerror {
  grid-row: 2/2;
  grid-column: 1/1;
  text-indent: 0.2rem;
  font-size: calc(var(--ftse) / 1.2);
  color: var(--ercr);
  overflow: hidden;
  opacity: 0;
}
mzfield.error mzerror {
  opacity: 1;
}
