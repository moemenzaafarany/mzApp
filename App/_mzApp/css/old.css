/*=======================*/
mzformfield mzformlabel,
mzformselect mzformlabel {
  --mn: 0 0.5rem;
  --wh: max-content;
  --brr: transparent;

  position: absolute;
  display: inline-block;
  pointer-events: none;
  transform: translate(0, 0);

  border-width: 0 !important;
  background-color: transparent !important;
  background-image: transparent !important;
}
mzformfield.label mzformlabel,
mzformfield.focus mzformlabel,
mzformfield.value mzformlabel,
mzformselect.label mzformlabel,
mzformselect.focus mzformlabel,
mzformselect.value mzformlabel {
  --pg: 0 0.4rem;
  transform: translate(0, -50%);
  background-image: linear-gradient(
    to bottom,
    transparent,
    transparent calc(50% - var(--bwh) / 2),
    var(--bcr) calc(50% - var(--bwh) / 2),
    var(--bcr) calc(50% + var(--bwh) * 2),
    transparent calc(50% + var(--bwh) * 2),
    transparent
  );
}

mzformfield.labelless mzformlabel,
mzformselect.labelless mzformlabel {
  display: none;
}

/*=======================*/
mzformfield mzformerror,
mzformselect mzformerror {
  --wh: max-content;
  --pg: 0;
  --cr: var(--e-cr);
  --bwh: 0;
  --bcr: transparent;

  display: inline-block;
  pointer-events: none;
  font-size: 0.75rem;

  background-image: transparent !important;
}

/*=======================*/
mzformfield,
mzformselect {
  --bwh: 0.15rem;
  --pg: 0.3rem 0.4rem;

  padding: 0 !important;
  border-width: 0 !important;
  position: relative;
  display: flex;
  flex-flow: column;
  justify-content: stretch;
  align-items: stretch;
  margin-top: 0 !important;
}
mzformfield.label,
mzformfield.focus,
mzformfield.value,
mzformselect.label,
mzformselect.focus,
mzformselect.value {
  margin-top: 0.5rem !important;
}
mzformfield.labelless,
mzformselect.labelless {
  margin-top: 0 !important;
}
mzformfield > *,
mzformselect > * {
  --cr: inherit;
  --bcr: inherit;

  --bwh: inherit;
  --bse: inherit;
  --brr: inherit;
  --brs: inherit;

  --pg: inherit;
  --f-brr: inherit;
  --e-brr: inherit;
  --e-cr: inherit;
}

/*=======================*/
mzformfield input,
mzformselect mzselectvalue {
  --wh: 100%;

  -webkit-appearance: none;
  min-width: unset;

  writing-mode: horizontal-tb !important;
  text-rendering: auto;
  letter-spacing: normal;
  word-spacing: normal;
  text-transform: none;
  text-indent: 0px;
  text-shadow: none;
  text-align: start;
  -webkit-rtl-ordering: logical;
  cursor: text;
}
mzformselect mzselectvalue {
  cursor: pointer;
}

mzformselect mzselectvalue * {
  pointer-events: none;
}

mzformfield.focus input,
mzformselect.focus mzselectvalue {
  border-color: var(--f-brr) !important;
}
mzformfield.label input,
mzformfield.focus input,
mzformfield.value input,
mzformselect.label mzselectvalue,
mzformselect.focus mzselectvalue,
mzformselect.value mzselectvalue {
  padding-top: 0.5rem !important;
}
mzformfield.labelless input,
mzformselect.labelless mzselectvalue {
  padding: var(--pg) !important;
}
mzformfield input::placeholder,
mzformselect mzselectvalue::before {
  --cr: inherit;
  content: attr(placeholder);
  width: 100%;
  opacity: 0;
}
mzformfield.label input::placeholder,
mzformfield.labelless input::placeholder,
mzformfield.focus input:focus::placeholder,
mzformselect.label mzselectvalue::before,
mzformselect.labelless mzselectvalue::before,
mzformselect.focus mzselectvalue::before {
  opacity: 1;
}
mzformselect.value mzselectvalue::before {
  display: none;
}

mzformfield.error input,
mzformselect.error mzselectvalue {
  border-color: var(--e-brr) !important;
}

/*=======================*/
mzformselect mzselectlist {
  --wh: 100%;
  --rgp: 0.1rem;
  position: absolute;
  top: 100%;
  display: none;
  flex-flow: column;
  justify-content: stretch;
  align-items: stretch;
  align-content: stretch;
}
mzformselect.options mzselectlist {
  display: flex;
}

/*=======================*/
mzformselect mzselectlist mzselectoption {
  cursor: pointer;
}

mzformselect mzselectlist mzselectoption:hover {
}

/*=======================*/
/*=======================*/
/*=======================*/
/*=======================*/

/*=======================*/
mzscaffold {
  --pn: relative;
  --wh: 100%;
  --ht: 100%;
}

/*=======================*/
mzcontainer {
  --wh: max-content;
  --ht: max-content;
}

/*=======================*/
mzscroll {
  max-width: 100%;
  max-height: 100%;
}

/*=======================*/
mzcenter {
  --wh: 100%;
  --ht: 100%;

  --fx_g: 1;
  --fx_s: 0;
  --fx_b: max-content;

  --ca_m: center;
  --ca_c: center;
}
/*=======================*/
mzdivider {
  --wh: auto;
  --ht: auto;
  flex: 1 0 auto;
  justify-self: stretch;
  align-self: stretch;
  border-top: none !important;
  border-left: none !important;
}

/*=======================*/
mzflex,
mzstack {
  --wh: 100%;
  --ht: 100%;

  --fx_g: 1;
  --fx_s: 0;
  --fx_b: max-content;

  --ca_m: flex-start;
  --ca_c: flex-start;

  --gp_r: 5rem;
  --gp_c: 5rem;
}

mzflex.shrink {
  width: auto;
  height: auto;
}

mzstack {
  position: relative;
}
mzstack > * {
  position: absolute;
}
/*=======================*/
mzgrid {
  --wh: 100%;
  --ht: 100%;

  flex: 1 0 max-content;
  display: grid;
  justify-content: flex-start;
  align-items: flex-start;
  row-gap: 0.25rem;
  column-gap: 0.25rem;
}

/*=======================*/
mzflex .mzFlexExpand {
  justify-self: stretch;
  align-self: stretch;
}

/*=======================*/
mzbutton {
  display: flex;
  flex-wrap: nowrap;
  justify-content: center;
  align-items: center;
  cursor: pointer;
  user-select: none;
}
mzbutton:hover {
  color: var(--h-cr) !important;
  background-color: var(--h-bcr) !important;
  border-color: var(--h-bcr) !important;
  border-style: var(--h-bse) !important;
  border-width: var(--h-bwh) !important;
}
mzbutton * {
  pointer-events: none;
}

/*=======================*/
mztext {
  word-wrap: normal;
  word-break: normal;
}

/*=======================*/
mzicon {
  font-family: "fontAwesomeBrands", "fontAwesomeRegular", "fontAwesomeSolid";
}

/*=======================*/
mzimage {
  display: contents;
}
mzimage img {
  pointer-events: none;
  user-select: none;
  max-width: 100%;
  max-height: 100%;
}

/*=======================*/
mzfield {
  --bdcr: white;
  --bd: var(--bdcr);
  --cr: #333;
  --hrcr: black;
  --fscr: blue;
  --ercr: red;
  --ftse: 1rem;
  --pg: 0.2rem 0.4rem;
  --brwh: 0.125rem;
  --brse: solid;
  --brrs: 0.15rem;
  --itsw: inset 0 0.1rem 0.16rem var(--cr);

  position: relative;
  display: grid;
  grid-template-rows: auto auto;
  grid-template-columns: auto;

  align-content: flex-start;
  justify-content: flex-start;
  align-items: flex-start;
  justify-items: flex-start;

  color: var(--cr);
}
mzfield.focus,
mzfield.label,
mzfield.value {
  margin-top: calc(var(--ftse) / 1.5);
}
mzfield.labelless {
  margin-top: unset;
}

/*=============*/
mzfield mzlabel {
  grid-row: 1/1;
  grid-column: 1/1;
  position: absolute;
  pointer-events: none;
  padding: var(--pg);
  margin: 0;
  border-width: var(--brwh);
  border-style: var(--brse);
  border-color: transparent;
  top: 0;
}
mzfield.focus mzlabel,
mzfield.label mzlabel,
mzfield.value mzlabel {
  top: -30%;
  background-color: var(--bdcr);
  border-width: 0;
  padding-top: 0;
  padding-bottom: 0;
  margin: var(--pg);
  font-size: calc(var(--ftse) / 1.2);
}
mzfield.labelless mzlabel {
  display: none;
}

/*=============*/
mzfield mzhint {
  grid-row: 1/1;
  grid-column: 1/1;
  position: absolute;
  pointer-events: none;
  padding: var(--pg);
  margin: 0;
  border-width: var(--brwh);
  border-style: var(--brse);
  border-color: transparent;
  top: 0;
  opacity: 0;
}
mzfield.focus mzhint,
mzfield.label mzhint,
mzfield.labelless mzhint {
  padding-top: calc(var(--ftse) / 2);
  opacity: 0.5;
}
mzfield.labelless mzhint {
  padding: var(--pg);
}
mzfield.value mzhint {
  opacity: 0;
}

/*=============*/
mzfield mzvalue {
  grid-row: 1/1;
  grid-column: 1/1;
  display: flex;
  flex-flow: column;
  justify-content: stretch;
  align-items: stretch;

  padding: var(--pg);
  border-width: var(--brwh);
  border-style: var(--brse);
  border-color: var(--cr);
  border-radius: var(--brrs);
  box-shadow: var(--itsw);
  cursor: pointer;
}
mzfield.focus mzvalue,
mzfield.label mzvalue,
mzfield.value mzvalue {
  padding-top: calc(var(--ftse) / 1.5);
}
mzfield.labelless mzvalue {
  padding: var(--pg);
}
mzfield.focus mzvalue {
  border-color: var(--fscr);
}
mzfield.error mzvalue {
  border-color: var(--ercr);
}

/*=============*/
mzfield mzerror {
  grid-row: 2/2;
  grid-column: 1/1;
  text-indent: 0.2rem;
  font-size: calc(var(--ftse) / 1.2);
  color: var(--ercr);
  overflow: hidden;
  opacity: 0;
}
mzfield.error mzerror {
  opacity: 1;
}
